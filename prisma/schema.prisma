// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Grant {
  authorization_code
  client_credentials
  refresh_token
  password
  implicit
}

model Client {
  id            String   @id
  name          String
  secret        String?
  redirectUris  String[]
  allowedGrants Grant[]
  scopes        Scope[]

  authCodes AuthCode[]
  tokens    Token[]
}

enum CodeChallengeMethod {
  S256
  plain
}

model AuthCode {
  code                String               @id
  redirectUri         String?
  codeChallenge       String?
  codeChallengeMethod CodeChallengeMethod?
  expiresAt           DateTime
  user                User?                @relation(fields: [userId], references: [id])
  userId              String?
  client              Client               @relation(fields: [clientId], references: [id])
  clientId            String
  scopes              Scope[]

  revoked Boolean @default(false)
}

model Token {
  accessToken           String    @id
  accessTokenExpiresAt  DateTime
  refreshToken          String?
  refreshTokenExpiresAt DateTime?
  client                Client    @relation(fields: [clientId], references: [id])
  clientId              String
  user                  User?     @relation(fields: [userId], references: [id])
  userId                String?
  scopes                Scope[]
  originatingAuthCodeId String?

  revoked Boolean @default(false)
}

model User {
  id String @id

  authCodes AuthCode[]
  tokens    Token[]
}

model Scope {
  name String @id

  clients   Client[]
  tokens    Token[]
  authCodes AuthCode[]
}
